plugins {
	id 'java'
	id 'com.palantir.docker' version '0.25.0'
	id 'com.palantir.docker-run' version '0.25.0'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'pl.allegro.tech.build.axion-release' version '1.10.1'
	id 'jp.classmethod.aws.cloudformation' version '0.41'
}

group = 'site.jordanthomas'
version = '0.0.2'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	implementation group: 'com.h2database', name: 'h2', version: '1.3.175'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compile 'org.springframework.hateoas:spring-hateoas'
	runtimeOnly 'mysql:mysql-connector-java'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation 'junit:junit:4.12'
}

test {
	environment "BOOKS_ENVIORMENT", "dev"
	useJUnitPlatform()
}

String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'jordanthomas761'
String imageName = "${dockerHubUsernameProperty}/book-store:$version"

docker {
	name imageName
	files "build/libs/${bootJar.archiveFileName.get()}"
	buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}

dockerRun {
	name project.name
	image imageName
	ports '8081:8080'
	clean true
	arguments '-v', '//var/run/docker.sock:/var/run/docker.sock'
}

aws {
	region = findProperty('region') ?: 'us-east-1'
}

cloudFormation {
	stackName "$project.name-stack"
	stackParams([
			SubnetID: findProperty('subnetId') ?: '',
			ServiceName: project.name,
			ServiceVersion: project.version,
			DockerHubUsername: dockerHubUsernameProperty
	])
	templateFile project.file("ecs.yml")
}



